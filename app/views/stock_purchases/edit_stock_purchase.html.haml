- links_arr = [{:title=>"Stock Purchase",:url=>"#",:active_class=>""},{:title=>"Id: #{@stock_purchase.id}",:url=>"#",:active_class=>"col-breadcrumb-selected"}]
- render_page_breadcrumbs(links_arr)

- manual_load_javascript "stores"
.card.padding-20

	%tr.row{:style=>"display:flex;"}
		%td
			= form_tag(cancel_po_store_purchase_orders_path(@stock_purchase.store), method: "get",multipart: true) do
				%input{:type=>"hidden", :name=>"purchase_order_id", :value=>@stock_purchase.purchase_order_id}
				%button.m-btn.red.float-r.waves-effect.waves-light#total_po_cancel{:type => "submit"}
					Cancel Purchase

	= form_tag store_purchase_order_path(@stock_purchase.store,@stock_purchase.purchase_order),method: :put do
		= submit_tag("edit purchase", :class => 'm-btn btn-success float-r margin-b-15 margin-r-10')
		=hidden_field_tag("store_id",@stock_purchase.store_id)
		%table.table.table-hover.table-bordered#purchase_product_accordion{"data-vendor-id"=>@stock_purchase.purchase_order.vendor_id,:id=>"po_vendor_id"}
			%thead
				%tr
					%th Sl no
					%th Product name
					%th price
					%th Quantity
					/ %td unit
					%th= "estimate cost (#{currency})"
					%td Cancel item
			%tbody.dynamic_product_add
				-sl=0
				- @stock_purchase.purchase_order.purchase_order_metum.each do |meta|
					-vendor_price = meta.product.vendor_products.by_vendor(@stock_purchase.purchase_order.vendor_id).first.price 
					-sl += 1
					%tr.data-table__selectable-row{:id=>"po_meta#{meta.id}"}
						=hidden_field_tag("purchase_orders[][meta_id]",meta.id)
						%td{:class=>"meta_products","data-product-id"=>meta.product_id}= sl 
							
						%td{"aria-controls" => "purchase_product_collapse_#{meta.product_id}", "aria-expanded" => "false", "data-parent" => "#purchase_product_accordion", "data-toggle" => "collapse", :href => "#purchase_product_collapse_#{meta.product_id}", :role => "button"}
							- _product = Product.find(meta.product_id)
							- _product_name = _product.package_component.present? ?  _product.product_name(_product) : _product.name
							="#{_product_name}"
							- if meta.product.local_name.present?
								%b
									= " ( #{meta.product.local_name} )"
						%td
							= text_field_tag("purchase_orders[][price_per_unit]",meta.price_per_unit,class: "allow-numeric-only form-control price_#{meta.product_id} product_price", "data-product-id"=>meta.product_id)
						%td
							%span.float-l
								= text_field_tag("purchase_orders[][product_amount]",meta.product_amount,class: "allow-numeric-only form-control margin-b-2 purchase-input input_quantity transfer-quantity-#{meta.product_id}", "data-product-id"=>meta.product_id)
							%span.m-btn.cyan.margin-l-15{:style=>"height:33px;"}
								= meta.product.basic_unit
						/ %td
						/ 	- meta.product.input_units.each do |unit|
						/ 		-puts unit.inspect
						/ 	/ = select_tag :product_unit_id, options_for_select(meta.product.input_units.active_only.map{ |ut| [ut.product_unit_name, "#{ut.product_unit_id}__#{ut.product_unit_name}__#{ut.basic_unit_multiplier}",{"data-transaction-id"=>ut.id}]}),{ prompt: meta.product.basic_unit, :class=>"form-control transfer-input input_quantity add_transaction_unit"}
						/ 	= select_tag :product_unit_id, nil, { prompt: meta.product.basic_unit, :class=>"form-control transfer-input input_quantity unit-input-#{meta.product_id} add_transaction_unit"}
						%td
							= text_field_tag("estimate_price_#{meta.id}",meta.product_amount*meta.price_per_unit,class: "allow-numeric-only estimated_cost_#{meta.product_id} form-control product_estmated_cose")
						%td
							.m-btn.red.m-btn-low-padding.cancel_item_in_po{:title=>"cancel item in po", "data-po-id"=>@stock_purchase.purchase_order.id, "data-meta-id"=>meta.id, "data-product-name"=>meta.product.name}
								%i.mdi-action-highlight-remove