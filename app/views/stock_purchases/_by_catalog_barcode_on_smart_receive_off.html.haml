-if AppConfiguration.get_config_value('price_for_color_size') == 'enabled'
  = render "barcode_by_catalog_price_for_color_size", :stock_purchase => @stock_purchase, :business_type => business_type
-else
  %table.data-table#stock_purchase_order_accordion
    %thead
      %tr.data-table__selectable-row
        %th
        %th
        %th
          %label{:for=>"parent_check"} Product
        %th Product Gender
        %th Quantity
        %th
          Landing
          %br
          %small="Price (#{currency})"
        %th 
          Discount 
          %br
          %small="(#{currency})"
        - if AppConfiguration.get_config_value('Percentage_applied_on_lending_price') == 'enabled'  
          %th 
            Sales
            %br
            %small Percentage(%)              
        - if @input_tax_config == 'enabled'
          %th 
            Total price
            %br
            %small (Without TAX)
          %th.col-lg-3
            Applicable TAX classes
        %th 
          Additional
          %br
          Cost
        %th
          Total Price
          %br
          %small="(With TAX)" if @input_tax_config == 'enabled'
          %small="(#{currency})"      
        %th
          Sale Price
          %br
          %small="(#{currency})"
        - if AppConfiguration.get_config_value('retail_menu') == 'enabled'  
          %th.col-lg-1 
            MRP  
        %th.col-lg-1
          SKU  
        %th 
          Batch No
        - if @stock_expiry_date == 'enabled'   
          %th
            Expiry Date  
        %th 
          Hsn Code
        %th
          Model No
        - if @stock_description != 'enabled'
          %th
            Description    
    %tbody.test
      - i = 0
      - j = 1
      - @stock_purchase.purchase_order.purchase_order_metum.each do |object|
        - _stock = @stock_purchase.stocks.get_product(object.product_id)
        - is_base_unit = object.product_unit.present? ? false : true
        - _unit_name = object.product_unit.present? ? object.product_unit.short_name : object.product.basic_unit
        - vendor_pro = object.product.vendor_products.by_vendor(@stock_purchase.purchase_order.vendor_id).first
        - if object.price_per_unit.present?
          - price = object.price_per_unit
        - else
          - if is_base_unit
            - price = vendor_pro.present? ? vendor_pro.price : ''
          - else
            - price = vendor_pro.present? ? (vendor_pro.price* object.product_transaction_unit.basic_unit_multiplier ): ''

        - product_sizes = ProductSize.by_product_id(object.product_id).enabled
        - product_colors = ColorProduct.by_product_id(object.product_id).enabled

        - if _stock.present?
          - _stock.each do |_single_stock|
            %tr.data-table__selectable-row.data-table__selectable-row--is-selected
              %td
              %td
              %td
                %label.font-sz-11.padding-l-20{:for=>"#{object.id}"}
                  - _product = Product.find(object.product_id)
                  - _product_name = _product.package_component.present? ?  _product.product_name(_product) : _product.name
                  ="#{_product_name}"
                  - if object.product.local_name.present?
                    %b
                      = " ( #{object.product.local_name} )"
              %td= _single_stock.p_gender
              %td
                %b
                  - if object.product_transaction_unit.present?
                    = _single_stock.stock_credit/object.product_transaction_unit.basic_unit_multiplier
                    = object.product_transaction_unit.product_unit_name
                    = "(#{_single_stock.stock_credit} #{object.product.basic_unit})"
                  - else
                    = "#{_single_stock.stock_credit} #{object.product.basic_unit}"
                - if _single_stock.secondary_stocks.present?
                  %br
                  =_single_stock.secondary_stocks.map{|ss| "#{ss.stock_credit} #{ss.product_unit.short_name}(s) of #{ss.product_unit.multiplier} #{ss.product_unit.basic_inventory_unit}"}.join(',')        
              %td=_single_stock.stock_price.present? ? "#{_single_stock.stock_price.landing_price} /#{object.product.basic_unit}" : "-"
              %td=_single_stock.stock_price.present? ? "#{_single_stock.stock_price.discount_price}" : "-"
              -if AppConfiguration.get_config_value('Percentage_applied_on_lending_price') == 'enabled'
                %td= _single_stock.stock_price.present? ? "#{_single_stock.stock_price.sales_percentage}" : "-"
              - if @input_tax_config == 'enabled'
                %td=_single_stock.stock_price.present? ? _single_stock.stock_price.total_price_without_tax : "-"  
              - if @input_tax_config == 'enabled'
                %td=_single_stock.stock_taxes.map{|tax| "#{tax.tax_class_name}: #{currency}#{tax.tax_amount.to_s} (on #{tax.tax_applicable_on})"}.join(' | ')           
              %td
                =_single_stock.stock_price.present? ? _single_stock.stock_price.additional_cost : "-"
                %br
                =_single_stock.stock_price.present? ? _single_stock.stock_price.addon_cost_remarks : ""
              %td
                -if _single_stock.stock_price.present?
                  -t_price =_single_stock.stock_price.landing_price.to_f
                  -t_qty = _single_stock.stock_credit
                -else
                  -t_price = 0  
                  -t_qty = 0
                = t_price * t_qty   
              %td
                = _single_stock.stock_price.sell_price_with_tax   
              - if AppConfiguration.get_config_value('retail_menu') == 'enabled'  
                %td.col-lg-1 
                  = show_mrp(business_type,_stock)    
              %td 
                = _single_stock.sku.present? ? _single_stock.sku : ""    
              
              %td=  _single_stock.batch_no.present? ? "#{_single_stock.batch_no}" : "-"
              - if @stock_expiry_date == 'enabled'    
                %td
                  = _single_stock.expiry_date.strftime("%d-%m-%Y").present? ? _single_stock.expiry_date : ""
               
              
              %td="#{object.product.hsn_code}"
              %td=  _single_stock.model_number.present? ? "#{_single_stock.model_number}" : "-" 
              %td   



          - puts "_stock.sum(:stock_credit).to_f:#{_stock.sum(:stock_credit).to_f}"
          - puts "object.product_amount.to_f:#{object.product_amount.to_f}"
          - if _stock.sum(:stock_credit).to_f < object.product_amount.to_f
            - _receive_due = object.product_amount.to_f - _stock.sum(:stock_credit).to_f
            - product_sku = object.product.properties.find_by_label("SKU").present? ? object.product.properties.find_by_label("SKU").value : ''
            - count = object.product_amount.to_i
            / - for j in 1..count
            / - j = 1
            /= debug product_sku
            %tr.m-input.data-table__selectable-row{:class => "product_receive_tr_#{object.id}_#{j} pom_row_#{object.id}"}
              .hold_color_size{:class => "hold_color_size_#{object.id}_#{j}"}
              %td
                - if is_base_unit
                  .add_product_row{"data-meta-id"=>object.id, "data-j"=>j,"data-product-id"=>object.product_id, "data-product-unit" => "#{object.product.basic_unit}", "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i}= "Add more"
                - else
                  .add_product_row{"data-meta-id"=>object.id, "data-j"=>j,"data-product-id"=>object.product_id, "data-product-unit" => "#{object.product_unit.short_name}", "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i}= "Add more"
              %td.padding-r-5
                = check_box_tag "selected_po_srials[]", "#{object.id}_#{j}", false, :class=>"checkbox-child filled-in stock_reiceved stock_purchase_received purchase_input check_purchase_input", "data-po-id" => "#{object.id}","data-product-id"=>object.product_id,"data-uid"=>"#{j}",:id=>"#{object.id}-#{j}"
                %label.font-sz-11.padding-l-20{:for=>"#{object.id}-#{j}"}
              %td{"aria-controls" => "stock_purchase_order_collapse_#{object.id}_#{j}", "aria-expanded" => "false", "data-parent" => "#stock_purchase_order_accordion", "data-toggle" => "collapse", :href => "#stock_purchase_order_collapse_#{object.id}_#{j}", :role => "button"}
                .product_name
                  / ="#{object.product.name}"  
                  - _product = Product.find(object.product_id)
                  - _product_name = _product.package_component.present? ?  _product.product_name(_product) : _product.name
                  ="#{_product_name}"
                  - if object.product.local_name.present?
                    %b
                      = " ( #{object.product.local_name} )"
              %td.padding-r-5
                = select_tag "p_gender_#{object.id}_#{j}", options_for_select({"Men" => "M","Women" => "W","Unisex" => "U"}), { class: "form-control", prompt: "Select Gender", "data-product-id"=>object.product_id }
              %td.padding-r-5{:id=>"input-quantities-#{object.product_id}"}
                - if is_base_unit
                  %input.filled-in.purchase_input{:type=>"checkbox",:class=> "input_unit_of_#{object.product_id}_#{j}", :id=>"input-unit-of-#{object.product_id}-#{object.product.basic_unit}", :checked=> true, "data-product-id"=>object.product_id, "data-multiplier"=>"1", "data-unit"=>"#{object.product.basic_unit}", "data-id"=>object.id,"data-uid"=>"#{j}" }
                  / :value=>"#{object.product_amount}"
                  %input.validate.form-control.check-input.purchase_input.margin-b-2.allow-numeric-only{:type => "text", :value=>"#{_receive_due}", :class=>"input_quantity_of_#{object.product_id}_#{object.product.basic_unit}_#{j} input_quantity_of_#{object.id}_#{j} input_quantity_of_#{object.product_id}", "data-product-id"=>object.product_id, "data-id"=>object.id,"data-uid"=>"#{j}" }
                  =_unit_name
                - else
                  %input.filled-in.purchase_input{:type=>"checkbox", :name=>"input_quantity_#{object.product_id}_#{j}", :value =>object.secondary_product_unit_id,:class=> "input_unit_of_#{object.product_id}_#{j}", :id=>"input-unit-of-#{object.product_id}-#{object.product_unit.short_name}", :checked=> true, "data-product-id"=>object.product_id, "data-multiplier"=>object.product_unit.multiplier, "data-unit"=>"#{object.product_unit.short_name}", "data-id"=>object.id,"data-uid"=>"#{j}" }
                  %input.validate.form-control.check-input.purchase_input.margin-b-2.allow-numeric-only{:type => "text", :name=>"input_quantity_#{object.product_id}_#{object.secondary_product_unit_id}_#{j}", :value=>object.secondary_amount, :class=>"input_quantity_of_#{object.product_id}_#{object.product_unit.short_name}_#{j} input_quantity_of_#{object.id}_#{j} input_quantity_of_#{object.product_id}", "data-product-id"=>object.product_id, "data-id"=>object.id,"data-uid"=>"#{j}" }
                  =_unit_name        
              
              
              %td.padding-r-5
                %input.validate.form-control.check-input.allow-numeric-only.margin-b-2.landing-price.purchase_input.purchase-qty{:value=> "#{price}",:name => "pro_price_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} landing-price-#{object.product_id}-#{j} landing-price-#{object.product_id}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-pom-id"=>object.id}
                ="per"
                / %b="#{_unit_name}"
                %b=object.product.basic_unit
              %td
                %input.validate.form-control.check-input.allow-numeric-only.purchase_input{:value=> "0",:name => "pro_dicount_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} discount-amount-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}  
                - unless @input_tax_config == 'enabled'
                  %input.form-control.check-input.allow-numeric-only{:value=> "0",:name => "pro_pwot_#{object.id}_#{j}", :type => "hidden",:class=>"purchase_input check-input-#{object.id}-#{j} price-wot-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
                
              / - if product_sizes.present? && product_colors.present?
              /   - if product_sizes.count < 9 && product_colors.count < 9
              /     %td 
              /     %td 
              /   - else
              /     %td.padding-r-5
              /       = select_tag "color_name_#{object.id}_#{j}", options_for_select(product_colors.map{ |pc| [pc.color_name] }), { prompt: "Select Color", class: "map", "data-product-id"=>object.product_id }
              /     %td.padding-r-5
              /       = select_tag "size_#{object.id}_#{j}", options_for_select(product_sizes.map{ |ps| [ps.size_name] }), { prompt: "Select Size", class: "map", "data-product-id"=>object.product_id }  
              / - else 
              /   %td.padding-r-5
              /     = select_tag "color_name_#{object.id}_#{j}", options_for_select(Color.all.map{ |cl| [cl.name] }), { prompt: "Select Color", class: "map", "data-product-id"=>object.product_id }
              /   %td.padding-r-5
              /     = select_tag "size_#{object.id}_#{j}", options_for_select(Size.all.map{ |sz| [sz.name] }), { prompt: "Select Size", class: "map", "data-product-id"=>object.product_id } 
                                        
              - if AppConfiguration.get_config_value('Percentage_applied_on_lending_price') == 'enabled'  
                %td.padding-r-5
                  /= select_tag "sales_percentage_#{object.id}_#{j}", options_for_select(@percentages.map { |e| ["#{e.value}%", "#{e.id}",{'data-product-id'=>object.product_id}] }), {:class=>"form-control auto_populate_entity tax_serial_#{i} sales_percentage_#{object.product_id}", "data-meta-id"=>object.id,"data-uid"=>"#{j}" ,"data-counter"=>i, "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.sum(:product_amount).to_i, "data-entity-type"=>"tax",prompt: "Percent", disabled: true}
                  %input.validate.form-control.allow-numeric-only{:value=> "0",:name => "sales_percentage_#{object.id}_#{j}", :type => "text",:class=>"auto_populate_entity tax_serial_#{j} sales_percentage_#{object.product_id}_#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-counter"=>j, "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i, "data-entity-type"=>"tax", "data-meta-id"=>object.id, disabled: true}
                  %input.validate.form-control.allow-numeric-only{:value=> "0",:name => "hidden_sales_percentage_#{object.id}_#{j}", :type => "hidden",:class=>"hidden_auto_populate_entity hidden_tax_serial_#{j} hidden_sales_percentage_#{object.product_id}_#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-counter"=>j, "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i, "data-entity-type"=>"tax", "data-meta-id"=>object.id}                    
              - if @input_tax_config == 'enabled'
                %td
                  %input.validate.form-control.check-input.allow-numeric-only{:value=> "0",:name => "pro_pwot_#{object.id}_#{j}", :type => "text",:class=>"purchase_input check-input-#{object.id}-#{j} price-wot-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
                %td
                  = get_input_taxes(object.product_id,current_user.unit_id,j)
                  .clearfix
                  .m-input{:id=>"tax-input-container-#{object.product_id}-#{j}"}
              %td
                %input.validate.form-control.check-input.allow-numeric-only{:value=> "0",:name => "pro_additional_cost_#{object.id}_#{j}", :type => "text",:class=>"purchase_input check-input-#{object.id}-#{j} pro-additional-cost-#{object.product_id}-#{j} purchase_input_additional_cost", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
              
                %input.validate.form-control{:name => "addon_remarks_#{object.id}_#{j}", :type => "text",:placeholder=>"(Remarks)","data-uid"=>"#{j}"}
              %td
                %input.validate.form-control.check-input.allow-numeric-only.product-total-wt{:value=> "0",:name => "pro_price_wt_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} product_price_wt_#{object.product_id}_#{j}","data-uid"=>"#{j}"}      
                .row.margin-l-r-none
                  .col-lg-9.padding-l-r-none
                    - if is_base_unit
                      %input.validate.form-control.check-input.allow-numeric-only.product-qty.purchase_input{:value=> "1",:name => "pro_qty_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} quantity-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}     
                    - else
                      %input.validate.form-control.check-input.allow-numeric-only.product-qty.purchase_input{:value=> object.secondary_amount * object.product_unit.multiplier,:name => "pro_qty_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} quantity-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
                  .col-lg-3.padding-l-r-none
                    %br
                    / =_unit_name
                    =object.product.basic_unit
              - i += 1   
              / - if AppConfiguration.get_config_value('auto_generate_sku') == 'enabled' 
              /   %td.padding-r-5
              /     %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false"} 
              / - else    
              /   %td.padding-r-5
              /     %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :value => "#{product_sku}", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false" }
              - if AppConfiguration.get_config_value('retail_menu') == 'enabled'
                %td.padding-r-5
                  %input.validate.form-control.check-input.allow-numeric-only.margin-b-2.sale-price.purchase-qty{:value=> "#{price}",:name => "retail_price_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} landing-price-#{object.product_id}-#{j} landing-price-#{object.product_id} sale-price-#{object.product_id} sale-price-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-pom-id"=>object.id}
                  ="per"
                  %b="#{_unit_name}"
              %td.padding-r-5
                %input.validate.form-control.check-input.allow-numeric-only.margin-b-2.purchase-cost.pro-mrp{:value=> "0",:name => "pro_mrp_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} mrp-#{object.product_id} mrp-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-pom-id"=>object.id}
                ="per"
                %b="#{_unit_name}"  
              - if AppConfiguration.get_config_value('auto_generate_sku') == 'enabled' 
                %td.padding-r-5
                  %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false"} 
              - else    
                %td.padding-r-5
                  %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :value => "#{product_sku}", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false" }    
              %td.padding-r-5
                %input.validate.form-control.margin-b-2{:name => "batch_no_#{object.id}_#{j}", :type => "text", "data-product-id"=>object.product_id, :placeholder=>"Batch no"}
              - if @stock_expiry_date == 'enabled'   
                %td.padding-r-5
                  %input.validate.form-control.datepick{:name => "expiry_date_#{object.id}_#{j}", :type => "text",:placeholder=>"Expiry Date",:required=> true, :value => "#{Date.today+1.years}"}    
              %td.padding-r-5
                %input.validate.form-control.margin-b-2{:value=> "#{object.product.hsn_code}",:name => "pro_hsn_code_#{object.id}_#{j}", :type => "text","data-product-id"=>object.product_id,"data-uid"=>"#{j}",:placeholder=>"Hsn code" }
              
              %td.padding-r-5
                %input.validate.form-control.margin-b-2{:name => "model_number_#{object.id}_#{j}", :type => "text", "data-product-id"=>object.product_id, :placeholder=>"Model No"}

              - if @stock_description != 'enabled'
                %td.padding-r-5
                  %input.validate.form-control.check-input.purchase_input.description{:type => "text", :name=>"description_#{object.id}_#{j}",:placeholder=>"Desc" }   
                       
            / - if product_sizes.present? && product_colors.present?
            /   - if product_sizes.count < 9 && product_colors.count < 9     
            /     %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}  
              
            /       %td{:colspan=>'100%'}
            /         %table.col-lg-12
            /           %tr
            /             %th.col-lg-1= ""  
            /             - product_colors.each do |cp|
            /               %th.col-lg-1
            /                 = cp.color.name
            /           - if product_sizes.present?   
            /             - product_sizes.each do |ps|   
            /               %tr
            /                 %td.m-input.col-lg-1= ps.size.name 
            /                 - product_colors.each do |cp|
            /                   - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_descriptions(object.purchase_order_id,object.id,object.product_id,cp.color_id,ps.size_id).first
            /                   -  if _po_metum_descriptions.present?
            /                     - _po_metum_description_quentity = _po_metum_descriptions.quantity
            /                   - else
            /                     - _po_metum_description_quentity = 0
            /                   %td.m-input.col-lg-1
            /                     %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id,"data-metum-id"=>"#{object.id}_#{j}", "data-color-id"=>cp.color_id, "data-size-id"=>ps.size_id, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"} 

            /           - elsif product_sizes.blank? && product_colors.present?
            /             %tr
            /               %td.col-lg-1= ""  
            /               - product_colors.each do |cp| 
            /                 - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_color(object.purchase_order_id,object.id,object.product_id,cp.color_id).first
            /                 -if _po_metum_descriptions.present?
            /                   -_po_metum_description_quentity = _po_metum_descriptions.quantity
            /                 - else
            /                   -_po_metum_description_quentity = 0
            /                 %td.m-input.col-lg-1
            /                   %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id, "data-color-id"=>cp.color_id, "data-metum-id"=>"#{object.id}_#{j}", "data-size-id"=>0, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"}
            /   - else
            /     %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}                 
            / - else 
            /   %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}     

            - if product_colors.present? || product_sizes.present?        
              %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}    
                
                %td{:colspan=>'100%'}
                  .inner
                    %table.po_table
                      %tbody{:style=>"float:left;"}
                        %tr
                          %th.fix.col-lg-1= ""  
                          - product_colors.each do |cp|
                            %th.col-lg-1
                              = cp.color.name
                        - if product_sizes.present?   
                          - product_sizes.each do |ps|   
                            %tr
                              %td.m-input.fix.col-lg-1= ps.size.name 
                              - if product_colors.present?
                                - product_colors.each do |cp|
                                  - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_descriptions(object.purchase_order_id,object.id,object.product_id,cp.color_id,ps.size_id).first
                                  -  if _po_metum_descriptions.present?
                                    - _po_metum_description_quentity = _po_metum_descriptions.quantity
                                  - else
                                    - _po_metum_description_quentity = 0
                                  %td.m-input.col-lg-1
                                    %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id,"data-metum-id"=>"#{object.id}_#{j}", "data-color-id"=>cp.color_id, "data-size-id"=>ps.size_id, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"}
                              - else
                                - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_size(object.purchase_order_id,object.id,object.product_id,ps.size_id).first
                                -if _po_metum_descriptions.present?
                                  -_po_metum_description_quentity = _po_metum_descriptions.quantity
                                - else
                                  -_po_metum_description_quentity = 0
                                %td.m-input.col-lg-1
                                  %input.col-lg-1{:type=>"text", "data-product-id"=>ps.product_id, "data-color-id"=>0, "data-metum-id"=>"#{object.id}_#{j}", "data-size-id"=>ps.size_id, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"} 

                        - elsif product_sizes.blank? && product_colors.present?
                          %tr
                            %td.col-lg-1= ""  
                            - product_colors.each do |cp| 
                              - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_color(object.purchase_order_id,object.id,object.product_id,cp.color_id).first
                              -if _po_metum_descriptions.present?
                                -_po_metum_description_quentity = _po_metum_descriptions.quantity
                              - else
                                -_po_metum_description_quentity = 0
                              %td.m-input.col-lg-1
                                %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id, "data-color-id"=>cp.color_id, "data-metum-id"=>"#{object.id}_#{j}", "data-size-id"=>0, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"} 
            - else 
              %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}

            - j += 1  




        - else
          - product_sku = object.product.properties.find_by_label("SKU").present? ? object.product.properties.find_by_label("SKU").value : ''
          - count = object.product_amount.to_i
          / - for j in 1..count
          / - j = 1
          /= debug product_sku
          %tr.m-input.data-table__selectable-row{:class => "product_receive_tr_#{object.id}_#{j} pom_row_#{object.id}"}
            .hold_color_size{:class => "hold_color_size_#{object.id}_#{j}"}
            %td
              - if is_base_unit
                .add_product_row{"data-meta-id"=>object.id, "data-j"=>j,"data-product-id"=>object.product_id, "data-product-unit" => "#{object.product.basic_unit}", "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i}= "Add more"
              - else
                .add_product_row{"data-meta-id"=>object.id, "data-j"=>j,"data-product-id"=>object.product_id, "data-product-unit" => "#{object.product_unit.short_name}", "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i}= "Add more"
            %td.padding-r-5
              = check_box_tag "selected_po_srials[]", "#{object.id}_#{j}", false, :class=>"checkbox-child filled-in stock_reiceved stock_purchase_received purchase_input check_purchase_input", "data-po-id" => "#{object.id}","data-product-id"=>object.product_id,"data-uid"=>"#{j}",:id=>"#{object.id}-#{j}"
              %label.font-sz-11.padding-l-20{:for=>"#{object.id}-#{j}"}
            %td{"aria-controls" => "stock_purchase_order_collapse_#{object.id}_#{j}", "aria-expanded" => "false", "data-parent" => "#stock_purchase_order_accordion", "data-toggle" => "collapse", :href => "#stock_purchase_order_collapse_#{object.id}_#{j}", :role => "button"}
              .product_name
                / ="#{object.product.name}"  
                - _product = Product.find(object.product_id)
                - _product_name = _product.package_component.present? ?  _product.product_name(_product) : _product.name
                ="#{_product_name}"
                - if object.product.local_name.present?
                  %b
                    = " ( #{object.product.local_name} )"
            %td.padding-r-5
              = select_tag "p_gender_#{object.id}_#{j}", options_for_select({"Men" => "M","Women" => "W","Unisex" => "U"}), { class: "form-control", prompt: "Select Gender", "data-product-id"=>object.product_id }
            %td.padding-r-5{:id=>"input-quantities-#{object.product_id}"}
              - if is_base_unit
                %input.filled-in.purchase_input{:type=>"checkbox",:class=> "input_unit_of_#{object.product_id}_#{j}", :id=>"input-unit-of-#{object.product_id}-#{object.product.basic_unit}", :checked=> true, "data-product-id"=>object.product_id, "data-multiplier"=>"1", "data-unit"=>"#{object.product.basic_unit}", "data-id"=>object.id,"data-uid"=>"#{j}" }
                %input.validate.form-control.check-input.purchase_input.margin-b-2.allow-numeric-only{:type => "text", :value=>"#{object.product_amount}", :class=>"input_quantity_of_#{object.product_id}_#{object.product.basic_unit}_#{j} input_quantity_of_#{object.id}_#{j} input_quantity_of_#{object.product_id}", "data-product-id"=>object.product_id, "data-id"=>object.id,"data-uid"=>"#{j}" }
                =_unit_name
              - else
                %input.filled-in.purchase_input{:type=>"checkbox", :name=>"input_quantity_#{object.product_id}_#{j}", :value =>object.secondary_product_unit_id,:class=> "input_unit_of_#{object.product_id}_#{j}", :id=>"input-unit-of-#{object.product_id}-#{object.product_unit.short_name}", :checked=> true, "data-product-id"=>object.product_id, "data-multiplier"=>object.product_transaction_unit.basic_unit_multiplier, "data-unit"=>"#{object.product_unit.short_name}", "data-id"=>object.id,"data-uid"=>"#{j}" }
                %input.validate.form-control.check-input.purchase_input.margin-b-2.allow-numeric-only{:type => "text", :name=>"input_quantity_#{object.product_id}_#{object.secondary_product_unit_id}_#{j}", :value=>object.secondary_amount, :class=>"input_quantity_of_#{object.product_id}_#{object.product_unit.short_name}_#{j} input_quantity_of_#{object.id}_#{j} input_quantity_of_#{object.product_id}", "data-product-id"=>object.product_id, "data-id"=>object.id,"data-uid"=>"#{j}" }
                =_unit_name        
            
            
            %td.padding-r-5
              %input.validate.form-control.check-input.allow-numeric-only.margin-b-2.landing-price.purchase_input.purchase-qty{:value=> "#{price}",:name => "pro_price_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} landing-price-#{object.product_id}-#{j} landing-price-#{object.product_id}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-pom-id"=>object.id}
              ="per"
              / %b="#{_unit_name}"
              %b= _unit_name
            %td
              %input.validate.form-control.check-input.allow-numeric-only.purchase_input{:value=> "0",:name => "pro_dicount_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} discount-amount-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}  
              - unless @input_tax_config == 'enabled'
                %input.form-control.check-input.allow-numeric-only{:value=> "0",:name => "pro_pwot_#{object.id}_#{j}", :type => "hidden",:class=>"purchase_input check-input-#{object.id}-#{j} price-wot-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
              
            / - if product_sizes.present? && product_colors.present?
            /   - if product_sizes.count < 9 && product_colors.count < 9
            /     %td 
            /     %td 
            /   - else
            /     %td.padding-r-5
            /       = select_tag "color_name_#{object.id}_#{j}", options_for_select(product_colors.map{ |pc| [pc.color_name] }), { prompt: "Select Color", class: "map", "data-product-id"=>object.product_id }
            /     %td.padding-r-5
            /       = select_tag "size_#{object.id}_#{j}", options_for_select(product_sizes.map{ |ps| [ps.size_name] }), { prompt: "Select Size", class: "map", "data-product-id"=>object.product_id }  
            / - else 
            /   %td.padding-r-5
            /     = select_tag "color_name_#{object.id}_#{j}", options_for_select(Color.all.map{ |cl| [cl.name] }), { prompt: "Select Color", class: "map", "data-product-id"=>object.product_id }
            /   %td.padding-r-5
            /     = select_tag "size_#{object.id}_#{j}", options_for_select(Size.all.map{ |sz| [sz.name] }), { prompt: "Select Size", class: "map", "data-product-id"=>object.product_id } 
                                      
            - if AppConfiguration.get_config_value('Percentage_applied_on_lending_price') == 'enabled'  
              %td.padding-r-5
                /= select_tag "sales_percentage_#{object.id}_#{j}", options_for_select(@percentages.map { |e| ["#{e.value}%", "#{e.id}",{'data-product-id'=>object.product_id}] }), {:class=>"form-control auto_populate_entity tax_serial_#{i} sales_percentage_#{object.product_id}", "data-meta-id"=>object.id,"data-uid"=>"#{j}" ,"data-counter"=>i, "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.sum(:product_amount).to_i, "data-entity-type"=>"tax",prompt: "Percent", disabled: true}
                %input.validate.form-control.allow-numeric-only{:value=> "0",:name => "sales_percentage_#{object.id}_#{j}", :type => "text",:class=>"auto_populate_entity tax_serial_#{j} sales_percentage_#{object.product_id}_#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-counter"=>j, "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i, "data-entity-type"=>"tax", "data-meta-id"=>object.id, disabled: true}
                %input.validate.form-control.allow-numeric-only{:value=> "0",:name => "hidden_sales_percentage_#{object.id}_#{j}", :type => "hidden",:class=>"hidden_auto_populate_entity hidden_tax_serial_#{j} hidden_sales_percentage_#{object.product_id}_#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-counter"=>j, "data-total-count"=> @stock_purchase.purchase_order.purchase_order_metum.count.to_i, "data-entity-type"=>"tax", "data-meta-id"=>object.id}                    
            - if @input_tax_config == 'enabled'
              %td
                %input.validate.form-control.check-input.allow-numeric-only{:value=> "0",:name => "pro_pwot_#{object.id}_#{j}", :type => "text",:class=>"purchase_input check-input-#{object.id}-#{j} price-wot-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
              %td
                = get_input_taxes(object.product_id,current_user.unit_id,j)
                .clearfix
                .m-input{:id=>"tax-input-container-#{object.product_id}-#{j}"}
            %td
              %input.validate.form-control.check-input.allow-numeric-only{:value=> "0",:name => "pro_additional_cost_#{object.id}_#{j}", :type => "text",:class=>"purchase_input check-input-#{object.id}-#{j} pro-additional-cost-#{object.product_id}-#{j} purchase_input_additional_cost", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
            
              %input.validate.form-control{:name => "addon_remarks_#{object.id}_#{j}", :type => "text",:placeholder=>"(Remarks)","data-uid"=>"#{j}"}
            %td
              %input.validate.form-control.check-input.allow-numeric-only.product-total-wt{:value=> "0",:name => "pro_price_wt_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} product_price_wt_#{object.product_id}_#{j}","data-uid"=>"#{j}"}      
              .row.margin-l-r-none
                .col-lg-9.padding-l-r-none
                  - if is_base_unit
                    %input.validate.form-control.check-input.allow-numeric-only.product-qty.purchase_input{:value=> "1",:name => "pro_qty_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} quantity-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}     
                  - else
                    %input.validate.form-control.check-input.allow-numeric-only.product-qty.purchase_input{:value=> object.secondary_amount * object.product_transaction_unit.basic_unit_multiplier,:name => "pro_qty_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} quantity-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}"}
                .col-lg-3.padding-l-r-none
                  %br
                  / =_unit_name
                  =object.product.basic_unit
            - i += 1   
            / - if AppConfiguration.get_config_value('auto_generate_sku') == 'enabled' 
            /   %td.padding-r-5
            /     %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false"} 
            / - else    
            /   %td.padding-r-5
            /     %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :value => "#{product_sku}", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false" }
            - if AppConfiguration.get_config_value('retail_menu') == 'enabled'
              %td.padding-r-5
                %input.validate.form-control.check-input.allow-numeric-only.margin-b-2.sale-price.purchase-qty{:value=> "#{price}",:name => "retail_price_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} landing-price-#{object.product_id}-#{j} landing-price-#{object.product_id} sale-price-#{object.product_id} sale-price-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-pom-id"=>object.id}
                ="per"
                / %b="#{_unit_name}"
                %b= _unit_name
            %td.padding-r-5
              %input.validate.form-control.check-input.allow-numeric-only.margin-b-2.purchase-cost.pro-mrp{:value=> "0",:name => "pro_mrp_#{object.id}_#{j}", :type => "text",:class=>"check-input-#{object.id}-#{j} mrp-#{object.product_id} mrp-#{object.product_id}-#{j}", "data-product-id"=>object.product_id,"data-uid"=>"#{j}","data-pom-id"=>object.id}
              ="per"
              / %b="#{_unit_name}"  
              %b= _unit_name
            - if AppConfiguration.get_config_value('auto_generate_sku') == 'enabled' 
              %td.padding-r-5
                %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false"} 
            - else    
              %td.padding-r-5
                %input.validate.form-control.check-input.purchase_input.product-sku{:type => "text", :name=>"pro_sku_#{object.id}_#{j}",:placeholder=>"SKU", :value => "#{product_sku}", :style=>"width:100px;", :onkeydown=>"if (event.keyCode == 13) return false" }    
            %td.padding-r-5
              %input.validate.form-control.margin-b-2{:name => "batch_no_#{object.id}_#{j}", :type => "text", "data-product-id"=>object.product_id, :placeholder=>"Batch no"}
            - if @stock_expiry_date == 'enabled'   
              %td.padding-r-5
                %input.validate.form-control.datepick{:name => "expiry_date_#{object.id}_#{j}", :type => "text",:placeholder=>"Expiry Date",:required=> true, :value => "#{Date.today+1.years}"}    
            %td.padding-r-5
              %input.validate.form-control.margin-b-2{:value=> "#{object.product.hsn_code}",:name => "pro_hsn_code_#{object.id}_#{j}", :type => "text","data-product-id"=>object.product_id,"data-uid"=>"#{j}",:placeholder=>"Hsn code" }
            
            %td.padding-r-5
              %input.validate.form-control.margin-b-2{:name => "model_number_#{object.id}_#{j}", :type => "text", "data-product-id"=>object.product_id, :placeholder=>"Model No"}

            - if @stock_description != 'enabled'
              %td.padding-r-5
                %input.validate.form-control.check-input.purchase_input.description{:type => "text", :name=>"description_#{object.id}_#{j}",:placeholder=>"Desc" }   
                     
          / - if product_sizes.present? && product_colors.present?
          /   - if product_sizes.count < 9 && product_colors.count < 9     
          /     %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}  
            
          /       %td{:colspan=>'100%'}
          /         %table.col-lg-12
          /           %tr
          /             %th.col-lg-1= ""  
          /             - product_colors.each do |cp|
          /               %th.col-lg-1
          /                 = cp.color.name
          /           - if product_sizes.present?   
          /             - product_sizes.each do |ps|   
          /               %tr
          /                 %td.m-input.col-lg-1= ps.size.name 
          /                 - product_colors.each do |cp|
          /                   - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_descriptions(object.purchase_order_id,object.id,object.product_id,cp.color_id,ps.size_id).first
          /                   -  if _po_metum_descriptions.present?
          /                     - _po_metum_description_quentity = _po_metum_descriptions.quantity
          /                   - else
          /                     - _po_metum_description_quentity = 0
          /                   %td.m-input.col-lg-1
          /                     %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id,"data-metum-id"=>"#{object.id}_#{j}", "data-color-id"=>cp.color_id, "data-size-id"=>ps.size_id, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"} 

          /           - elsif product_sizes.blank? && product_colors.present?
          /             %tr
          /               %td.col-lg-1= ""  
          /               - product_colors.each do |cp| 
          /                 - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_color(object.purchase_order_id,object.id,object.product_id,cp.color_id).first
          /                 -if _po_metum_descriptions.present?
          /                   -_po_metum_description_quentity = _po_metum_descriptions.quantity
          /                 - else
          /                   -_po_metum_description_quentity = 0
          /                 %td.m-input.col-lg-1
          /                   %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id, "data-color-id"=>cp.color_id, "data-metum-id"=>"#{object.id}_#{j}", "data-size-id"=>0, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"}
          /   - else
          /     %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}                 
          / - else 
          /   %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}     

          - if product_colors.present? || product_sizes.present?        
            %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}    
              
              %td{:colspan=>'100%'}
                .inner
                  %table.po_table
                    %tbody{:style=>"float:left;"}
                      %tr
                        %th.fix.col-lg-1= ""  
                        - product_colors.each do |cp|
                          %th.col-lg-1
                            = cp.color.name
                      - if product_sizes.present?   
                        - product_sizes.each do |ps|   
                          %tr
                            %td.m-input.fix.col-lg-1= ps.size.name 
                            - if product_colors.present?
                              - product_colors.each do |cp|
                                - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_descriptions(object.purchase_order_id,object.id,object.product_id,cp.color_id,ps.size_id).first
                                -  if _po_metum_descriptions.present?
                                  - _po_metum_description_quentity = _po_metum_descriptions.quantity
                                - else
                                  - _po_metum_description_quentity = 0
                                %td.m-input.col-lg-1
                                  %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id,"data-metum-id"=>"#{object.id}_#{j}", "data-color-id"=>cp.color_id, "data-size-id"=>ps.size_id, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"}
                            - else
                              - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_size(object.purchase_order_id,object.id,object.product_id,ps.size_id).first
                              -if _po_metum_descriptions.present?
                                -_po_metum_description_quentity = _po_metum_descriptions.quantity
                              - else
                                -_po_metum_description_quentity = 0
                              %td.m-input.col-lg-1
                                %input.col-lg-1{:type=>"text", "data-product-id"=>ps.product_id, "data-color-id"=>0, "data-metum-id"=>"#{object.id}_#{j}", "data-size-id"=>ps.size_id, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"} 

                      - elsif product_sizes.blank? && product_colors.present?
                        %tr
                          %td.col-lg-1= ""  
                          - product_colors.each do |cp| 
                            - _po_metum_descriptions = PurchaseOrderMetumDescrption.set_purchase_order_metum_color(object.purchase_order_id,object.id,object.product_id,cp.color_id).first
                            -if _po_metum_descriptions.present?
                              -_po_metum_description_quentity = _po_metum_descriptions.quantity
                            - else
                              -_po_metum_description_quentity = 0
                            %td.m-input.col-lg-1
                              %input.col-lg-1{:type=>"text", "data-product-id"=>cp.product_id, "data-color-id"=>cp.color_id, "data-metum-id"=>"#{object.id}_#{j}", "data-size-id"=>0, :class=>"product_color_size allow-numeric-only color_size_#{object.id}_#{j} purchase_input", :value => _po_metum_description_quentity, "data-uid"=>"#{j}"} 
          - else 
            %tr.collapse.light-blue.lighten-5{"aria-labelledby" => "stock_purchase_order__heading#{object.id}_#{j}", :role => "tabpanel", :id => "stock_purchase_order_collapse_#{object.id}_#{j}"}

          - j += 1              