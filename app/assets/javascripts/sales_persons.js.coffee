# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/

$(document).ready ->

	# fhandler = Gmaps.build 'Google'
	# fhandler.buildMap { provider: {}, internal: {id: 'map'} }, ->
	# 	fmarkers = fhandler.addMarkers([], draggable: true)
	# 	fhandler.bounds.extendWith(fmarkers)
	# 	return

	# Coded By Abdul Start
	$(document).on "click", ".map-start-allocation-sale-person", ->
		id = $(this).data("val").id
		name = $(this).data("val").name
		$("#allocat_to_name").html name+"'s Allocation"
		$("#allocat_to").val id 
		$("#allocate_items").html ""
		$('#map_allocation').css display: 'block'
		return

	$(document).on "click", ".map-add-allocation", ->
		id = $(this).data("val").id
		name = $(this).data("val").name
		if $('#item_'+id).length
			Materialize.toast("This resource already added.", 5000, 'rounded red')
		else
			$("#allocate_items").append "<li class='li_tag' id='item_"+id+"'><input name='selected_respurces[]' required='required' type='hidden' value='"+id+"'><div style='width: 160px; margin-left: 5px;'>"+name+"</div> <span class='close deleteli' >&times;</span></li>"
		return

	$(document).on "click", ".deleteli", ->
		$(this).parent().remove()
		return

	$(document).on "click", ".close_btn", ->
		$($(this).data("hide")).css display: 'none'
		return
	# Coded By Abdul End

	# $('.resource').mouseover ->
	#   resource_id = $(this).data('resource-id')
	#   #alert resource_id
	#   $(".span_to_hide#{resource_id}").hide()
	#   $(".span_to_show#{resource_id}").show()
	#   $(".draggable_item#{resource_id}").draggable()
	#   return
	# $('.resource').mouseout ->
	#   resource_id = $(this).data('resource-id')
	#   $(".span_to_hide#{resource_id}").show()
	#   $(".span_to_show#{resource_id}").hide()
	#   return 

	$('.draggable_resource').draggable
	  # containment: 'window'
	  # containment: $('.droppable')
	  # cursor: 'crosshair'
	  revert: 'invalid'
	  # scroll: false
	  # stop: (event, ui) ->
	  # 	$(this).show()
	  #   # if $(this).hasClass('tsh')
	  #   #   $(this).attr 'style', ''
	  #   # return
	  drag: (event, ui) ->
	    # offset = $(this).offset()
	    # xPos = offset.left
	    # yPos = offset.top
	    # shw_xy = 'x: ' + xPos + 'y: ' + yPos
	    # console.log shw_xy
	    return
	  helper: 'clone'

# ---
# generated by js2coffee 2.2.0
	
	# $('.droppable').droppable drop: (event, ui) ->
	# 	resource_id = ui.draggable.data("resource-id")
	# 	day = $(this).data('day')
	# 	user_id = $(this).data('user-id')
    
	# 	return

	request_addr = $.ajax(
    type: 'GET'
    url: "/api/v2/units/units_sales_persons/"
    dataType: "json"
  )
	request_addr.done (data, textStatus, jqXHR) ->
		#console.log data
		#console.log data["data"][6]["user_profile"][0]["profile"]
		units_markers_data = []
		users_markers_data = []
		#console.log units_markers_data
		for i in [0..(data["data"].length - 1)]
	    #console.log data["data"][i]
	  	unit_latitude = data["data"][i].latitude
	  	unit_longitude = data["data"][i].longitude
	  	unit_name = data["data"][i].unit_name
	  	unit_address = data["data"][i].address
	  	unit_pincode = data["data"][i].pincode
	  	unit_infowindow = "<div><i class='fa fa-bank'></i> &nbsp#{unit_name}</div><div><i class='fa fa-map-marker'></i> &nbsp#{unit_address}, #{unit_pincode}</div>"
	  	if unit_latitude!=null && unit_longitude!=null
	  		unit_lat_long_array =
	  			{
			      "lat": unit_latitude,
			      "lng": unit_longitude,
			      "picture": {
			        "url": "/assets/icons/ic_marker_DC_store.svg",
			        "width":  43,
			        "height": 43
			      },
			      "infowindow": "#{unit_infowindow}"
			    }
	  		units_markers_data.push unit_lat_long_array
	  	user_profile = data["data"][i].user_profile
	  	for j in [0..(user_profile.length - 1)]
	  		if typeof(user_profile[j])!="undefined"
	  			#console.log user_profile[j]
	  			profile_data = user_profile[j].profile
	  			# alert(JSON.stringify(profile_data));
	  			user_latitude = profile_data.latitude
	  			user_longitude = profile_data.longitude
	  			user_fullname = profile_data.firstname + " " + profile_data.lastname
	  			user_contact_no = profile_data.contact_no
	  			user_address = profile_data.address
	  			user_zip_code = profile_data.zip_code
	  			user_role = user_profile[j].user_role
	  			if user_latitude != null && user_longitude != null
	  				if user_role == 'bill_manager'
	  					user_infowindow = "<div><i class='fa fa-user'></i> &nbsp#{user_fullname}</div><div><i class='fa fa-phone'></i> &nbsp#{user_contact_no}</div><div><i class='fa fa-map-marker'></i> &nbsp#{user_address}, #{user_zip_code}</div>"
			  			user_lat_long_array =
		  					{
						      "lat": user_latitude,
						      "lng": user_longitude,
						      "picture": {
						        "url": "/assets/icons/ic_marker_manager.svg",
						        "width":  45,
						        "height": 45
						      },
						      "infowindow": "#{user_infowindow}"
						    }
			  		else if user_role == 'sale_person'
			  			user_infowindow = "<div><i class='fa fa-user'></i> &nbsp#{user_fullname}</div><div><i class='fa fa-phone'></i> &nbsp#{user_contact_no}</div><div><i class='fa fa-map-marker'></i> &nbsp#{user_address}, #{user_zip_code}</div><div style='float:right;'><br><button class='map_res_save_btn btn-success map-start-allocation-sale-person' data-val='{\"id\":\"#{profile_data.user_id}\",\"name\":\"#{user_fullname}\"}'>Start Allocation</button></div>"
			  			user_lat_long_array =
		  					{
						      "lat": user_latitude,
						      "lng": user_longitude,
						      "picture": {
						        "url": "/assets/icons/ic_marker_salesboy.svg",
						        "width":  45,
						        "height": 45
						      },
						      "infowindow": "#{user_infowindow}"
						    }
	  				if typeof(user_lat_long_array)== 'object'
	  					units_markers_data.push user_lat_long_array

	  			customer_allocated_resources = user_profile[j].resources
	  			if customer_allocated_resources.length > 0
	  				for l in [0..(customer_allocated_resources.length - 1)]
	  					console.log customer_allocated_resources[l]
	  					customer_resource_latitude = customer_allocated_resources[l].latitude
	  					customer_resource_longitude = customer_allocated_resources[l].longitude
	  					resource_name = customer_allocated_resources[l].name
	  					customer_name = customer_allocated_resources[l].customer_name
	  					address = customer_allocated_resources[l].delivery_address
	  					mobile_no = customer_allocated_resources[l].mobile_no
	  					pincode = customer_allocated_resources[l].pincode
	  					resource_infowindow = "<div><i class='fa fa-bank'></i> &nbsp#{resource_name}</div><div><i class='fa fa-user'></i> &nbsp#{customer_name}</div><div><i class='fa fa-phone'></i> &nbsp#{mobile_no}</div><div><i class='fa fa-map-marker'></i> &nbsp#{address}, #{pincode}</div><div style='float:right;'><br><button class='map_res_save_btn btn-success map-add-allocation' data-val='{\"id\":\"#{customer_allocated_resources[l].id}\",\"name\":\"#{customer_allocated_resources[l].name}\"}'>Add to Allocation</button></div>"
	  					if customer_resource_latitude != null && customer_resource_longitude != null
	  						resource_lat_long_array =
		  					{
						      "lat": customer_resource_latitude,
						      "lng": customer_resource_longitude,
						      "picture": {
						        "url": "/assets/icons/ic_marker_subStore.svg",
						        "width":  45,
						        "height": 45
						      },
						      "infowindow": "#{resource_infowindow}"
						    }
						  #console.log typeof(resource_lat_long_array)
						  if typeof(resource_lat_long_array) != 'undefined'
	  						units_markers_data.push resource_lat_long_array
	  						

	  #console.log users_markers_data
		#console.log units_markers_data.value		

		handler = Gmaps.build 'Google'
		handler.buildMap { provider: {}, internal: {id: 'map'} }, ->
		  for k in [0..(units_markers_data.length - 1)]
			  markers = handler.addMarkers([
			    units_markers_data[k]
			  ], draggable: true)
			  google.maps.event.addListener markers[0].serviceObject, 'dragend', ->
				  console.log 'open info window'
				  return
		  handler.bounds.extendWith(markers)
		  handler.fitMapToBounds()
		  handler.getMap().setZoom(12)
		# return
	request_addr.error (jqXHR, textStatus, errorThrown) ->
    alert "AJAX Error:" + textStatus
    return

  # $(".sale-person-quickview").on "click", ->
  # 	sale_person_id = $(this).data("sale-person-id")
  # 	result = JST["templates/sales_persons/quick_details"]
  # 	$("#sale_person_quickinfo_#{sale_person_id}").html result
  # 	return  

	# $(document).on "click", ".day_wise_allocation", ->
	$('.droppable_user_resource').droppable drop: (event, ui) ->
    day = $(this).data('day')
    resource_id = ui.draggable.data("resource-id")
    user_id = $(this).data('user-id')
    closest_td = $(this).closest("tr").find(".inner-scroll-bar-horizontal")
    target_count = $(this).data('target-count')
    if !$("#user_resource_#{day}_#{resource_id}_#{user_id}").length
    	request = $.ajax(
	    	type : 'POST'
	    	url : '/sales_persons/allot_resource/'
	    	data :
	    		day : "#{$(this).data('day')}"
	    		user_id : "#{$(this).data('user-id')}"
	    		resource_id : "#{ui.draggable.data("resource-id")}"
	    ) 
	    request.done (data, textStatus, jqXHR) ->
	      Materialize.toast("Sales person alloted to resource successfully", 4000)
	      contentStr = "<span class='card card-content padding-l-10 float-l margin-l-5' id='user_resource_#{day}_#{resource_id}_#{user_id}'>"
	      contentStr += "#{ui.draggable.data("resource-name")}"
	      contentStr += "<a class='m-btn red m-btn-low-padding user_resource_delete' data-user-resource-id='#{data.id}' title='remove resource'>"
	      contentStr += "<i class='mdi-action-highlight-remove'></i>"
	      contentStr += "</a>"
	      contentStr += "</span>"
	      $(closest_td).append contentStr
	      target_count = target_count + 1
	      contentString = "Target : #{target_count} (shop)"
	      $("##{day}_#{user_id}").html ''
	      $("##{day}_#{user_id}").append contentString
	      $("##{day}target#{user_id}").data('target-count',target_count)
	      console.log data
	      return
	    request.error (jqXHR, textStatus, errorThrown) ->
	      alert "AJAX Error:" + textStatus
	      return
    else
    	Materialize.toast("This resource has been allocated already", 4000, "red")
    
    return

  $(document).on "click", ".user_resource_delete", ->
    if !window.confirm('Are you sure to delete the allocated resouce for the user?')
      return false
    closest_span = $(this).parent('span')
    user_resource_id = $(this).data("user-resource-id")
    request = $.ajax(
      type: 'POST'
      url: "/sales_persons/delete_user_resource/"
      data:
        user_resource_id: user_resource_id
    )
    request.done (data, textStatus, jqXHR) ->
      Materialize.toast('The allocated resource has been removed for the user.',4000)
      $(closest_span).remove()
      return
    request.error (jqXHR, textStatus, errorThrown) ->
      Materialize.toast("AJAX Error",4000)
      return
    return

	return 